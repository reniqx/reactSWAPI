{"version":3,"sources":["components/Header.js","components/Nav.js","components/Btn.js","components/People.js","components/Cards.js","components/Planets.js","components/Loader.js","components/Starships.js","App.js","index.js"],"names":["Header","useState","isNavVisible","setNavVisibility","isSmallScreen","setIsSmallScreen","useEffect","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","className","src","alt","CSSTransition","in","timeout","classNames","unmountOnExit","name","id","onClick","document","querySelector","getElementsByClassName","Btn","text","color","backgroundColor","style","defaultProps","People","data","n","setN","innerWidth","gender","Grid","columns","map","people","i","Column","Card","Content","url","Description","height","mass","hair_color","eye_color","birth_year","Cards","details","Object","entries","pop","length","c","charAt","toUpperCase","replace","key","Planets","planets","climate","diameter","gravity","terrain","population","Loader","Starships","starships","model","max_atmosphering_speed","starship_class","crew","hyperdrive_rating","App","setPeople","setStarships","setPlanets","setLoading","page","type","setType","card","setCard","getDetails","a","fetch","res","json","undefined","films","film","push","title","join","vehicles","vehicle","console","log","residents","person","pilots","species","specie","ships","ship","homeworld","home","navImgs","addEventListener","event","preventDefault","target","parentElement","results","fetchData","nav","deck","pages","d","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df5d4a38.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport SearchBar from \"./search.js\"\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default function Header() {\n\n  const [isNavVisible, setNavVisibility] = useState(false);\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  });\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  };\n\n  const toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n    var deck = document.querySelector(\"#deck\");\n    var navImgs = document.getElementsByClassName(\"navImg\");\n  };\n\n  return (\n    <header className=\"Header\">\n   <img src=\"./assets/Logo.svg\" className=\"Logo\" alt=\"logo\" />\n      <CSSTransition\n        in={!isSmallScreen || isNavVisible}\n        timeout={350}\n        classNames=\"NavAnimation\"\n        unmountOnExit\n      >\n        <nav className=\"Nav\">\n         <ul className=\"nav\">\n\t\t\t\t<li>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a name=\"people\">\n\t\t\t\t\t\t<img className=\"navImg\" src=\"./assets/Card.svg\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</td>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a name=\"deck\">\n\t\t\t\t\t\t<img id=\"deck\" className=\"deck\" src=\"./assets/Deck.svg\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</td>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a name=\"planets\">\n\t\t\t\t\t\t<img className=\"navImg\" src=\"./assets/Homeworld.svg\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</td>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a name=\"starships\">\n\t\t\t\t\t\t<img className=\"navImg\" src=\"./assets/Starship.svg\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</td>\n\t\t\t\t</li>\n\n\t\t\t</ul>\n        </nav>\n      </CSSTransition>\n      <button onClick={toggleNav} className=\"Burger\">\n        🍔\n      </button>\n\n    </header>\n  );\n}\n\n\n","\n\nconst Nav=()=>{\n\treturn(\n\t\t<>\n\t\t\t<ul className=\"nav\">\n\t\t\t\t<li>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a name=\"people\">\n\t\t\t\t\t\t<img className=\"navImg\" src=\"./assets/Card.svg\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</td>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a name=\"planets\">\n\t\t\t\t\t\t<img className=\"navImg\" src=\"./assets/Homeworld.svg\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</td>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a name=\"starships\">\n\t\t\t\t\t\t<img className=\"navImg\" src=\"./assets/Starship.svg\" />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</td>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</>\n\n\n\t\t)\n}\n\nexport default Nav;","import PropTypes from \"prop-types\";\n\nconst Btn = ({text, color, backgroundColor, className,onClick})=>{\n\treturn(\n\n\t\t<button style={{color, backgroundColor}} onClick={onClick} className={className}>{text}</button>\n\n\t\t)\n}\n\n\nBtn.defaultProps = {\n\t\ttext: \"MyBtn\",\n\t\tcolor: \"black\",\n\t\tbackgroundColor: \"silver\"\n}\n\nBtn.propTypes={\n\ttext: PropTypes.string,\n\tcolor: PropTypes.string,\n\tbackgroundColor: PropTypes.string,\n\tonClick: PropTypes.func,\n}\n\nexport default Btn;","import PropTypes from \"prop-types\";\nimport React, { useState, useEffect } from \"react\";\nimport {Card, Grid} from 'semantic-ui-react';\n\n\nexport default function People({data, onClick}){\n  const [n, setN] = useState(5);\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 980px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches && window.innerWidth > 500){\n   \t\tsetN(3);\n    }else if(window.innerWidth <= 500){\n    \tsetN(1);\n    } else {\n      //setIsSmallScreen(false);\n       setN(5);\n    }\n  };\n\n\n  let gender = \"\";\n\n\n\n\n\t\n\n\treturn(\n\t\t<>\n\n\t\t\n\n\t\t\t<Grid columns={n}>\n\t\t\t{data.map((people, i)=>{\n\t\t\t\t{\n\t\t\t\t\tif(people.gender == \"female\"){\n\t\t\t \t\t\tgender = './assets/Gender-Female.svg';\n\t\t\t \t\t}else if (people.gender==\"male\"){\n\t\t\t \t\t\t gender = './assets/Gender-Male.svg';\n\t\t\t \t\t}else if (people.gender==\"n/a\"|| people.gender==\"unknown\"){\n\t\t\t \t\t\tgender = \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.pinclipart.com%2Fpicdir%2Fbig%2F172-1728899_open-thinking-face-emoji-black-and-white-clipart.png&f=1&nofb=1\"\n\t\t\t \t\t}\n\n\t\t\t\t}\n\t\t\t\treturn(\n\t\t\t\t\t<Grid.Column key={i}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Content onClick={onClick}>\n\t\t\t\t\t\t\t\t<div className=\"cardText\" name = {people.url} className = \"custCard\">\n\t\t\t\t\t\t\t\t<Card.Header className=\"cardHeader\"><strong>{people.name}</strong></Card.Header>\n\t\t\t\t\t\t\t\t<Card.Description>\n\t\t\t\t\t\t\t\t\t<p><b>Height</b>: {people.height}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Weight</b>: {people.mass}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Hair</b>: {people.hair_color}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Eyes</b>: {people.eye_color}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Birth Year</b>: {people.birth_year}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Gender</b>: <img className=\"genderImg\" src={gender}></img></p>\t\n\t\t\t\t\t\t\t\t\t<div className=\"overLay\" id = {people.url}></div>\n\t\t\t\t\t\t\t\t</Card.Description>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t)\n\t\t\t})\n\n\t\t\t}\n\t\t\t</Grid>\n\n\t\t</>\n\n\t\t)\n}\n","import PropTypes from \"prop-types\";\nimport {Card, Grid} from 'semantic-ui-react';\nimport React, { useState, useEffect } from \"react\";\n\n\nexport default function Cards({data, onClick}){\n\n\nconst details = Object.entries(data);\n\n          for(let i = 0; i< 3; i++){\n              details.pop();\n          }\n        \tfor(let i = 0; i < details.length; i++){\n        \t\t\tlet c = details[i][0].charAt(0).toUpperCase();\n        \t\t\tdetails[i][0] = details[i][0].replace(details[i][0].charAt(0), c)\n        \t\t\tdetails[i][0] = details[i][0].replace(\"_\", \" \");\n        \t}\n\nreturn(\n\t<Grid columns={1}>\n\t\t\t\t\t<Grid.Column key={1}>\n\t\t\t\t\t\t<Card id = \"details\">\n\t\t\t\t\t\t\t<Card.Content onClick={onClick}>\n\t\t\t\t\t\t\t\t<div className=\"cardText\" className = \"custCard\">\n\t\t\t\t\t\t\t\t<Card.Description>\n\t\t\t\t\t\t\t\t\t{details.map((key, i)=>{\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Card.Description>\n\t\t\t\t\t\t\t\t<p><b>{details[i][0]}</b>: {details[i][1]}</p>\n\t\t\t\t\t\t\t</Card.Description></>\n\t\t\t\t\t\t)})\n\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Card.Description>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\n\n)\n\n} //end of main\n\n\n\n\t\t\t\t\t","import PropTypes from \"prop-types\";\nimport {Card, Grid} from 'semantic-ui-react';\nimport React, { useState, useEffect } from \"react\";\n\n\n\nexport default function Planets({data, onClick}){\n\nconst [isNavVisible, setNavVisibility] = useState(false);\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n  const [n, setN] = useState(5);\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 980px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches && window.innerWidth > 500){\n   \t\tsetN(3);\n    }else if(window.innerWidth <= 500){\n    \tsetN(1);\n    } else {\n      //setIsSmallScreen(false);\n       setN(5);\n    }\n  };\n\n\treturn(\n\t\t<>\n\t\t\t<Grid columns={n}>\n\t\t\t{data.map((planets, i)=>{\n\t\t\t\treturn(\n\t\t\t\t\t<Grid.Column key={i}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Content onClick={onClick}>\n\t\t\t\t\t\t\t\t<div className=\"cardText\" name = {planets.url} className = \"custCard\">\n\t\t\t\t\t\t\t\t<Card.Header className=\"cardHeader\"><strong>{planets.name}</strong></Card.Header>\n\t\t\t\t\t\t\t\t<Card.Description>\n\t\t\t\t\t\t\t\t\t<p><b>Climate</b>: {planets.climate}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Diameter</b>: {planets.diameter}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Gravity</b>: {planets.gravity}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Terrain</b>: {planets.terrain}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Population</b>: {planets.population}</p>\n\t\t\t\t\t\t\t\t\t<div className=\"overLay\" id = {planets.url}></div>\n\n\t\t\t\t\t\t\t\t</Card.Description>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t)\n\t\t\t})\n\n\t\t\t}\n\t\t\t</Grid>\n\n\t\t</>\n\n\t\t)\n}\n","import \"./Loader.css\"\n\nconst Loader = ()=>{\n\treturn(   \n\t\t<div className=\"loader-container\">\n         \t<div id=\"loader\"className=\"loader\"></div>\n        </div>\n          )}\n\nexport default Loader;","import PropTypes from \"prop-types\";\nimport {Card, Grid} from 'semantic-ui-react';\nimport React, { useState, useEffect } from \"react\";\n\n\n\nexport default function Starships({data, onClick}){\n\tconst [isNavVisible, setNavVisibility] = useState(false);\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n  const [n, setN] = useState(5);\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 980px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches && window.innerWidth > 500){\n   \t\tsetN(3);\n    }else if(window.innerWidth <= 500){\n    \tsetN(1);\n    } else {\n      //setIsSmallScreen(false);\n       setN(5);\n    }\n  };\n\n\treturn(\n\t\t<>\n\t\t\t<Grid columns={n}>\n\t\t\t{data.map((starships, i)=>{\n\t\t\t\treturn(\n\t\t\t\t\t<Grid.Column key={i}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Content onClick={onClick}>\n\t\t\t\t\t\t\t\t<div className=\"cardText\" name = {starships.url} className = \"custCard\">\n\t\t\t\t\t\t\t\t<Card.Header className=\"cardHeader\"><strong>{starships.name}</strong></Card.Header>\n\t\t\t\t\t\t\t\t<Card.Description>\n\t\t\t\t\t\t\t\t\t<p><b>Model</b>: {starships.model}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Length</b>: {starships.length}</p>\t\n\t\t\t\t\t\t\t\t\t<p><b>Max Speed</b>: {starships.max_atmosphering_speed}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Class</b>: {starships.starship_class}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Crew</b>: {starships.crew}</p>\n\t\t\t\t\t\t\t\t\t<p><b>Hyperdrive rating</b>: {starships.hyperdrive_rating}</p>\n\t\t\t\t\t\t\t\t\t<div className=\"overLay\" id = {starships.url}></div>\n\t\t\t\t\t\t\t\t</Card.Description>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t)\n\t\t\t})\n\n\t\t\t}\n\t\t\t</Grid>\n\n\t\t</>\n\n\t\t)\n}\n","\nimport React, {useState, useEffect} from 'react';\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport Btn from \"./components/Btn\";\nimport axios from \"axios\";\nimport People from \"./components/People\"\nimport Cards from \"./components/Cards\"\nimport Planets from \"./components/Planets\"\nimport Loader from \"./components/Loader\"\nimport Starships from \"./components/Starships\"\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\n\n\nfunction App() {\n\n  const [people, setPeople] = useState([]);\n  const [starships, setStarships] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [next, setNext] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [type, setType] = useState(\"people\");\n  const [card, setCard] = useState([])\n\n  let url = `https://swapi.dev/api/${type}/?page=${page}`;\n\n  useEffect(()=>{\n\n    var navImgs = document.getElementsByClassName(\"navImg\");\n\n    async function nav(){\n    for (var i = 0; i < navImgs.length; i++) {\n      navImgs[i].addEventListener(\"change\", (event)=>{\n          event.preventDefault();\n        });\n\n\n    navImgs[i].addEventListener(\"click\", (event)=>{\n        setType(event.target.parentElement.name);\n        setLoading(true);\n\n       });\n    }\n    }\n    \n\n    async function fetchData(){\n      let res = await fetch(url)\n      let data =await res.json();\n        switch(type){\n            case \"people\":\n            setPeople(data.results);\n            break;\n\n            case \"planets\":\n            setPlanets(data.results);\n            break;\n\n            case \"starships\":\n            setStarships(data.results);\n            break;\n\n          }\n    }\n\n      fetchData();\n      nav();\n\n      setLoading(false);\n      \n\n  });\n\n\n\n  async function goNext(){\n          let pageN = page;\n          pageN++;\n          url = `https://swapi.dev/api/${type}/?page=${pageN}`;\n          setPage(pageN)\n          let res = await fetch(url);\n          let data = await res.json();\n         \n          switch(type){\n            case \"people\":\n            setPeople([...people,...data.results]);\n            break;\n\n            case \"planets\":\n            setPlanets([...planets,...data.results]);\n            break;\n\n            case \"starships\":\n            setStarships([...starships,...data.results]);\n            break;\n\n          }\n\n        }\n\n\n  \n\n  async function getDetails(url){\n          let res = await fetch(url); \n          let data = await res.json();\n\n\n           if(data.films !== undefined){\n          \n                    const films=[]\n                     for(let i=0; i<data.films.length; i++){\n                          let res = await fetch(data.films[i]);\n                          let film = await res.json();\n                          films.push(film.title);\n                      }\n                    \n                    data.films = films;\n                    data.films = data.films.join(\" ⭐ \");\n            }\n\n\n          if(data.vehicles !== undefined){\n          \n                    const vehicles=[]\n                     for(let i=0; i<data.vehicles.length; i++){\n                          let res = await fetch(data.vehicles[i]);\n                          let vehicle = await res.json();\n                          vehicles.push(vehicle.name);\n                      }\n                      console.log(vehicles)\n                    \n                    data.vehicles = vehicles.join(',  ');    \n            }\n\n\n          if(data.residents !== undefined){\n          \n                    const residents=[]\n                     for(let i=0; i<data.residents.length; i++){\n                          let res = await fetch(data.residents[i]);\n                          let person = await res.json();\n                          residents.push(person.name);\n                      }\n                    \n                    data.residents = residents.join(', ');    \n            }\n\n          if(data.pilots !== undefined){\n          \n                    const pilots=[]\n                     for(let i=0; i<data.pilots.length; i++){\n                          let res = await fetch(data.pilots[i]);\n                          let person = await res.json();\n                          pilots.push(person.name);\n                      }\n                    \n                    data.pilots = pilots.join(', ');    \n            }\n\n            if(data.species !== undefined){\n  \n            const species=[]\n             for(let i=0; i<data.species.length; i++){\n                  let res = await fetch(data.species[i]);\n                  let specie = await res.json();\n                  species.push(specie.name);\n              }\n              console.log(species)\n            \n              data.species = species.join(',  ');    \n            }          \n\n          if(data.starships !== undefined){\n          \n                    const ships=[]\n                     for(let i=0; i<data.starships.length; i++){\n                          let res = await fetch(data.starships[i]);\n                          let ship = await res.json();\n                          ships.push(ship.name);\n                      }\n                    \n                    data.starships = ships.join(',  ');    \n            }\n\n            if (data.homeworld !== undefined) {\n              let res = await fetch(data.homeworld);\n              let home = await res.json();\n              data.homeworld = home.name;\n            }\n\n\n\n          setCard(await data);\n\n\n          \n          const keys = Object.entries(data);\n                setType(\"card\");\n        \n  }\n\n\n\n////////////////////////////////////\n// Loads all Cards in the section //\n///////////////////////////////////\n\nvar deck = document.querySelector(\"#deck\");\nif(deck){\n  deck.addEventListener(\"click\",\n    async ()=>{\n            let pages = [];\n            for (var i = 1; i <= 9; i++) {\n                \n                url = `https://swapi.dev/api/${type}/?page=${i}`;\n                let res = await fetch(url);\n                let data = await res.json();\n                let d = await data.results;\n                if(d){\n                for(var n = 0; n < d.length; n++){\n                    pages.push(d[n]);\n                }\n              }else{\n                return;\n              }\n\n\n                  \n            }\n\n          switch(type){\n            case \"people\":\n            setPeople([...pages]);\n        \n            return;\n\n            case \"planets\":\n            setPlanets([...pages]);\n            return;\n\n            case \"starships\":\n            setStarships([...pages]);\n            return;\n\n          }\n  })\n}\n\n\n    /// Render\n\n  switch(type){\n      case \"card\":\n           return(\n            <>\n                <Header />\n                <Cards data={card} />\n            </>);\n           \n\n      case \"people\":\n        return (\n          <>\n       <Header className =\"header\" />\n              <People onClick={(event)=>{\n                      url = event.target.id;\n                      getDetails(url)}} data={people} />\n          </>\n\n        );\n\n\n        \n\n        case \"planets\":\n          return (\n          <>\n       <Header className =\"header\" />\n              \n              <Loader />\n              <Planets onClick={(event)=>{\n                      url = event.target.id;\n                      getDetails(url)}} data={planets} />\n\n          </>\n        );\n        \n\n        case \"starships\":\n          return (\n          <>\n       <Header className =\"header\" />\n              <Loader />\n              <Starships onClick={(event)=>{\n                      url = event.target.id;\n                      getDetails(url)}} data={starships} />\n          </>\n        );\n        \n\n  }\n\n              \n\n\n\n}\n\n\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}